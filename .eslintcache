[{"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/postsSlice.ts":"1","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/App.tsx":"2","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/index.tsx":"3","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/app/store.ts":"4","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostList.tsx":"5","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/ReactionButton.tsx":"6","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/usersSlice.ts":"7","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostInfo.tsx":"8","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostPage.tsx":"9","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UserPage.tsx":"10"},{"size":1759,"mtime":1607005406464,"results":"11","hashOfConfig":"12"},{"size":607,"mtime":1607004899856,"results":"13","hashOfConfig":"12"},{"size":322,"mtime":1606640311858,"results":"14","hashOfConfig":"12"},{"size":486,"mtime":1606834952717,"results":"15","hashOfConfig":"12"},{"size":608,"mtime":1606991853103,"results":"16","hashOfConfig":"12"},{"size":973,"mtime":1606915409001,"results":"17","hashOfConfig":"12"},{"size":585,"mtime":1607005045267,"results":"18","hashOfConfig":"12"},{"size":554,"mtime":1607005835278,"results":"19","hashOfConfig":"12"},{"size":591,"mtime":1606915441376,"results":"20","hashOfConfig":"12"},{"size":860,"mtime":1607005676040,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ai3ubc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/postsSlice.ts",["43"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/App.tsx",["44","45","46"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/index.tsx",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/app/store.ts",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostList.tsx",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/ReactionButton.tsx",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/usersSlice.ts",["47"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostInfo.tsx",["48"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostPage.tsx",["49","50"],"import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../app/store';\nimport { selectPostById } from './postsSlice';\n\nexport const PostPage = () => {\n  const { postId } = useParams<any>();\n  useEffect(() => {\n    console.log(postId);\n  });\n\n  const post = useSelector((state: RootState) => selectPostById(state, postId));\n\n  if (post === undefined) {\n    return <div>No Data</div>;\n  }\n\n  return (\n    <div>\n      <h1>{post?.title}</h1>\n      <p>{post?.content}</p>\n    </div>\n  );\n};\n","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UserPage.tsx",["51"],{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"56","line":6,"column":3,"nodeType":"54","messageId":"55","endLine":6,"endColumn":9},{"ruleId":"52","severity":1,"message":"57","line":7,"column":3,"nodeType":"54","messageId":"55","endLine":7,"endColumn":11},{"ruleId":"58","severity":1,"message":"59","line":12,"column":1,"nodeType":"60","messageId":"61","endLine":12,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"62","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":7,"column":25,"nodeType":"63","messageId":"61","endLine":7,"endColumn":30},{"ruleId":"64","severity":1,"message":"65","line":8,"column":32,"nodeType":"66","messageId":"67","endLine":8,"endColumn":35,"suggestions":"68"},{"ruleId":"52","severity":1,"message":"69","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":24},"@typescript-eslint/no-unused-vars","'createSelector' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'Link' is defined but never used.","ArrowFunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["70","71"],"'selectPostById' is defined but never used.",{"messageId":"72","fix":"73","desc":"74"},{"messageId":"75","fix":"76","desc":"77"},"suggestUnknown",{"range":"78","text":"79"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"78","text":"80"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[287,290],"unknown","never"]