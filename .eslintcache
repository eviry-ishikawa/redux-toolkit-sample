[{"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/postsSlice.ts":"1","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/App.tsx":"2","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/index.tsx":"3","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/app/store.ts":"4","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostList.tsx":"5","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/usersSlice.ts":"6","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UserPage.tsx":"7","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/components/NavBar.tsx":"8","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UsersList.tsx":"9","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/parts/AddPostForm.tsx":"10","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostPage.tsx":"11","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/parts/UsersSelect.tsx":"12","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/parts/PostInfo.tsx":"13"},{"size":2443,"mtime":1607251768810,"results":"14","hashOfConfig":"15"},{"size":851,"mtime":1607258340076,"results":"16","hashOfConfig":"15"},{"size":344,"mtime":1607256894203,"results":"17","hashOfConfig":"15"},{"size":486,"mtime":1606834952717,"results":"18","hashOfConfig":"15"},{"size":771,"mtime":1607258571903,"results":"19","hashOfConfig":"15"},{"size":657,"mtime":1607141225154,"results":"20","hashOfConfig":"15"},{"size":860,"mtime":1607005676040,"results":"21","hashOfConfig":"15"},{"size":288,"mtime":1607257968473,"results":"22","hashOfConfig":"15"},{"size":439,"mtime":1607251135947,"results":"23","hashOfConfig":"15"},{"size":1320,"mtime":1607255488637,"results":"24","hashOfConfig":"15"},{"size":742,"mtime":1607255506009,"results":"25","hashOfConfig":"15"},{"size":619,"mtime":1607255488637,"results":"26","hashOfConfig":"15"},{"size":697,"mtime":1607255445683,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ai3ubc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/postsSlice.ts",[],[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/App.tsx",["61","62","63"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/index.tsx",[],[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/app/store.ts",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostList.tsx",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/usersSlice.ts",["64"],"import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport type User = {\n  id: string;\n  name: string;\n};\n\nexport type Users = User[];\n\nconst initialState: Users = [\n  { id: '1', name: 'test user 1' },\n  { id: '2', name: 'test user 2' },\n  { id: '3', name: 'test user 3' },\n];\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState: initialState,\n  reducers: {},\n});\n\nexport const selectAllUser = (state: RootState): Users => state.users;\n\nexport const selectUserById = (\n  state: RootState,\n  userId: string,\n): User | undefined => state.users.find((user) => user.id === userId);\n",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UserPage.tsx",["65"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { RootState } from '../../app/store';\nimport { selectPostById, selectPostByUser } from '../posts/postsSlice';\nimport { selectUserById } from './usersSlice';\n\nexport const UserPage: React.FC = () => {\n  const { userId } = useParams();\n  const user = useSelector((state: RootState) => selectUserById(state, userId));\n\n  const posts = useSelector((state: RootState) =>\n    selectPostByUser(state, userId),\n  );\n\n  return (\n    <div>\n      {user?.name} ' s post\n      {posts?.map((post) => (\n        <div key={post.id}>\n          <ul>\n            <li>\n              <p>\n                Title:{post.title}\n                Content:{post.content}\n              </p>\n            </li>\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/components/NavBar.tsx",["66"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/UsersList.tsx",["67"],"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectAllUser } from './usersSlice';\n\nexport const UsersList = () => {\n  const users = useSelector(selectAllUser);\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {users.map((user) => (\n        <div key={user.id}>\n          <Link to={`/users/${user.id}`}>{user.name}</Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n","/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/parts/AddPostForm.tsx",["68"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/PostPage.tsx",["69","70"],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/users/parts/UsersSelect.tsx",[],"/Users/ishikawaryoufutoshi/codes/typescript-redux-essentials-example-app/src/features/posts/parts/PostInfo.tsx",[],{"ruleId":"71","severity":1,"message":"72","line":6,"column":3,"nodeType":"73","messageId":"74","endLine":6,"endColumn":9},{"ruleId":"71","severity":1,"message":"75","line":7,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":11},{"ruleId":"76","severity":1,"message":"77","line":14,"column":1,"nodeType":"78","messageId":"79","endLine":14,"endColumn":15},{"ruleId":"71","severity":1,"message":"80","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":24},{"ruleId":"71","severity":1,"message":"81","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":4,"column":23,"nodeType":"82","messageId":"79","endLine":4,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":6,"column":26,"nodeType":"82","messageId":"79","endLine":6,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":6,"column":28,"nodeType":"82","messageId":"79","endLine":6,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":8,"column":25,"nodeType":"82","messageId":"79","endLine":8,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":9,"column":32,"nodeType":"85","messageId":"86","endLine":9,"endColumn":35,"suggestions":"87"},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'createSelector' is defined but never used.","'selectPostById' is defined but never used.","ArrowFunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["88","89"],{"messageId":"90","fix":"91","desc":"92"},{"messageId":"93","fix":"94","desc":"95"},"suggestUnknown",{"range":"96","text":"97"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"96","text":"98"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[342,345],"unknown","never"]